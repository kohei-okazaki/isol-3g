swagger: '2.0'
info:
  description: 健康情報APIのドキュメントです。<br>健康情報を登録する機能を提供します。
  version: '1.0'
  title: 健康情報API
host: 'localhost:8080'
basePath: /isol-api/healthInfo/
tags:
  - name: regist
    description: 健康情報の登録を実施
schemes:
  - http
paths:
  /:
    post:
      tags:
        - regist
      summary: '健康情報登録'
      description: '身長・体重からBMIと標準体重を計算し、健康情報の登録を実施'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'userId'
          in: 'path'
          description: 'ユーザID'
          required: true
          type: 'string'
        - name: 'height'
          in: 'path'
          description: '身長'
          required: true
          type: 'number'
        - name: 'weight'
          in: 'path'
          description: '体重'
          required: true
          type: 'number'


      responses:
        '200':
            description: 'success<br>response {<br>
              result,<br>
              dateId,<br>
              userId,<br>
              height,<br>
              weight,<br>
              bmi,<br>
              standardWeight,<br>
              userStatus,<br>
              regDate<br>
            }'

    get:
      tags:
        - regist
      summary: '健康情報登録'
      description: '身長・体重からBMIと標準体重を計算し、健康情報の登録を実施'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: 'userId'
          in: 'path'
          description: 'ユーザID'
          required: true
          type: 'string'
        - name: 'height'
          in: 'path'
          description: '身長'
          required: true
          type: 'number'
        - name: 'weight'
          in: 'path'
          description: '体重'
          required: true
          type: 'number'

      responses:
        '200':
            description: 'success<br>response {<br>
              result,<br>
              dateId,<br>
              userId,<br>
              height,<br>
              weight,<br>
              bmi,<br>
              standardWeight,<br>
              userStatus,<br>
              regDate<br>
            }'


securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
definitions:
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      petId:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int32
      shipDate:
        type: string
        format: date-time
      status:
        type: string
        description: Order Status
        enum:
          - placed
          - approved
          - delivered
      complete:
        type: boolean
        default: false
    xml:
      name: Order
  Category:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Category
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
    xml:
      name: User
  Tag:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Tag
  Pet:
    type: object
    required:
      - name
      - photoUrls
    properties:
      id:
        type: integer
        format: int64
      category:
        $ref: '#/definitions/Category'
      name:
        type: string
        example: doggie
      photoUrls:
        type: array
        xml:
          name: photoUrl
          wrapped: true
        items:
          type: string
      tags:
        type: array
        xml:
          name: tag
          wrapped: true
        items:
          $ref: '#/definitions/Tag'
      status:
        type: string
        description: pet status in the store
        enum:
          - available
          - pending
          - sold
    xml:
      name: Pet

  Response:
    type: object
    properties:
      result:
        type: number
      dataId:
        type: string
      userId:
        type: string
      height:
        type: number
      weight:
        type: number
      bmi:
        type: number
      standardWeight:
        type: number
      userStatus:
        type: string
      regDate:
        type: number

externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
